<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAHAAAADgAA
        ABQAAAAXAAAAFwAAABQAAAANAAAABwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAUHHSAWHXaAOSec
        qWEttMOIML7OpTC+z7Qwvs60LrjIpSuruYgllaFhHHF6OQcdIBYAAAAFAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMLTEaJZKeVjLG
        16k33O/dOeX49Trm+v843/L/N9zv/zjd8P843vD/ON3w/zfa7PU00uTdL77OqSOMmFYMKzAaAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAJIoGMPzPI
        2aY64fTsPOr+/zzs//876Pz/ON7x/zfb7v833O//N9zv/zjd8P843vH/ON/y/zjg8/844PP/Ntjq7DDA
        0KYge4c/AAAACQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAgcJDiul
        s2A52uzUPer+/z3s//886///O+j7/znd8P842ez/N9rt/zfb7v833O//N9zv/zjd8P843vH/ON/y/zjg
        8/844fT/OODz/zXR49QonqxgAgcIDgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ
        CQ0urbxqO+H05z7r//896///Pev//zzn+/853O//ONnr/zjZ7P842ez/ONrt/zfb7v833O//N9zv/zjd
        8P843vH/ON/y/zjg8/844fT/OOL1/zbY6ucqp7VqAgkJDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        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
        E/8TIiP/L5Oe/zvD0v83tcP/GUBE/woICP8RIiT/NK+9/zzU5f8aS1D/BwUF/woREv8jdn//NL7O/zbE
        1f8uqLf/Ejk9/wMCAf8FDA3/J5ai/zvn+/876///O+n99DjQ4k5s//8AV///AELF1CZI6PvXR+z//0fs
        //8wkJv/EBMT/w4ODv8YNjn/I2Vs/x5SV/8PFxj/CwgI/xlCRv890eL/Q+z//zChrv8NGBn/CAUF/wsV
        Fv8WRkz/GlRb/w8sL/8FBgb/AwEB/xVJT/831ef/POz//zzr//885/vXOMTUJkv//wA+qbQAMn2FB0nk
        9ZtI7P//SO3//0LX6P8jW2H/EBMU/w4LCv8ODAz/DQoK/wwKCv8UKSv/MqWy/0Tr/v9D7P//QeX3/yiF
        kP8OHR//BwQE/wYCAv8FAgL/BAEA/wYICP8UQkf/M8HR/z3s//886///POv//z3j9ZsugYoHNaSwAAAA
        AABz//8ASNXlQUrq/ehI7P//SO3//0PY6f8wj5r/IFBV/xk4PP8bQEX/JWpy/zi4xv9E6fz/ROz//0Ps
        //9D7f//Qeb5/zOxv/8gZW3/FDo//xIyNv8XSlD/JoeT/zjQ4v8+7P//Pev//z3r//896f3oPdTkQVz/
        /wAAAAAAAAAAAE7Z6gA8m6cJS+X3mEns//9I7P//SO3//0jt//9F4vT/Qdbn/0Lb7f9F6fz/Ru3//0Xs
        //9E7P//ROz//0Ps//9D7P//Q+3//0Hp/P882uz/O9Xm/z3i9f8/7P//P+z//z7r//896///Pev//z/k
        95g1mqcJRdrrAAAAAAAAAAAAAQAAAGH//wBM0+IrS+n8zUns//9J7P//SOz//0jt//9I7f//R+3//0bs
        //9G7P//Rez//0Xs//9E7P//Q+z//0Ps//9C7P//Quz//0Ht//9B7f//QOz//z/r//8/6///Puv//z7r
        //9A6PzNQtLiK1T//wAAAAAAAAAAAAAAAACG//8ARp+tANP//wBP4PBMTOv94kns//9J7P//SOz//0js
        //9H7P//R+z//0bs//9G7P//Rez//0Ts//9E7P//Q+z//0Ps//9C7P//Qez//0Hs//9A7P//QOv//z/r
        //8+6///QOr94kTe8Eyz//8APaCtAHX//wAAAAAAAAAAAAAAAACn//8AVtXlAD1laQJQ4/NXTOv94kns
        //9I7P//SOz//0js//9H7P//Ruz//0bs//9F7P//Rez//0Ts//9D7P//Q+z//0Ls//9C7P//Qez//0Ds
        //9A6///P+v//0Hq/eJF4PNXOGJoAkvT5ACS//8AAAAAAAAAAAAAAAAAAAAAAAAAAACH//8AW9jpAEFq
        bgJR4vJMTer9zErs//9I7P//SOz//0fs//9G7P//Ruz//0Xs//9F7P//ROz//0Ts//9D7P//Quz//0Ls
        //9B7P//QOz//0Hr//9D6f3MSODyTEFpbgJR1ucAdf//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACH//8AW9/wAHv//wBU3ewpT+n6lkvr/uhJ7P//R+z//0fs//9G7P//Ruz//0Xs//9E7P//ROz//0Ps
        //9C7P//Quz//0Ls//9E6/7oR+j6lkzc7Clo//8AU97wAHz//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACF//8AR56rAFr//wBVwM8HUuLyPU/p+5hL6/7VSez+80fs//9G7P//Ruz//0Xs
        //9E7P//ROz//0Xs/vNG6/7VSun7mEzh8z1LwNEHUP//AEGfqwB3//8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPtsUABAAAAFTV5QBd//8AW7jDBVXg8SJQ5fZIUOf5cU/p
        +5NN6vykTer8pE3q+5NN5/lxTeX2SFHg8SJat8QFVP//AEzV5wAIAAAASrbFAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARZ2mAAAAAABUxdIAWOz9AFX/
        /wBP//8AUP//AAwAAAAPAAAAR///AEj//wBR//8AVOz9AFLF0gAAAAAARpuoAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+AAAH/AAAA/gAAAHwAAAA4AAAAGAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AAGAAAABwAAAA+AAAAfwAAAP+AAAH/4AAH8=
</value>
  </data>
</root>